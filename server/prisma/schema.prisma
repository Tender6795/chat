// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  email        String     @unique
  password     String?
  firstName    String?
  lastName     String?
  avatar       String?
  socketId     String?
  provider     Provider?
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @default(now()) @map("updated_at")
  roles        Role[]
  Token        Token[]
  Message      Message[]
  createdRooms Room[] // Переименовано из "Room" в "createdRooms"
  RoomUser     RoomUser[]

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user_agent")

  @@map("tokens")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
}

model Room {
  id          String     @id @default(uuid())
  name        String
  description String?
  creator     User       @relation(fields: [creatorId], references: [id])
  creatorId   String
  members     RoomUser[]
  messages    Message[]
}

model RoomUser {
  id     String @id @default(uuid())
  room   Room   @relation(fields: [roomId], references: [id])
  roomId String
  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([roomId, userId])
}

model Message {
  id        String   @id @default(uuid())
  fromId    String
  from      User     @relation(fields: [fromId], references: [id])
  roomId    String
  room      Room     @relation(fields: [roomId], references: [id])
  text      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
